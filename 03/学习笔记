饿了么：https://h5.ele.me/
数据库以及接口，全部由自己开发。
后台管理：多用户。管理员的登陆，修改密码，管理员列表等功能
        店铺管理，商品管理，店铺以及商品的类别管理。
        调用接口安全设置。
        模块化，组件化。
前端展示：定位。多用户，手机号如何登陆。
    首页，详情。上拉加载，下拉刷新。购物车相关的功能。
    1、对项目整体模块的划分以及架构的搭建。
*******************模板**********************************
1、直接定义
<script>
    // 直接定义
    new Vue({
        el:"#root",
        // 如果指定模板，会将el所挂载的元素给替换掉。
        // template:"<div>我在这里挺好的，我怀念之前的美好时光。</div>",
        // 模板有且只能是一个根元素。
        // template:"<div v-if='true'>1</div><div v-else>2</div>",
        // template:"<div><div>1</div><div>2</div></div>",
        template:`
            <div>
                <div>
                    <input type="button" @click="changeUserName" value="你点我呀">
                    <input type="text"  v-model="userName">
                </div>
            </div>
        `,
        data:{
            userName:"我很好"
        },
        methods:{
            changeUserName(){
                this.userName = "我确实很好！";
            }
        }
    })
</script>
****************
二、通过script定义模板
<script type="x/template" id="tp">
    <div>你现在过的好吗？</div>
</script>
<script>
    // 通过 script创建模板
    new Vue({
        el:"#root",
        data:{
            age:12
        },
        template:"#tp",
        methods:{},
        filters:{},
        computed:{},
        mounted(){}
    })
</script>
**************************
三、通过template标签来定义模板
<template id="tp">
    <div>大家好，我今年{{age}}岁了，我是一个名字为template的标签，我的用处是可以帮助大家创建模板</div>
</template>
<script>
    new Vue({
        el:"#root",
        template:"#tp",
        data:{
            age:12
        },
        methods:{},
        filters:{},
        computed:{},
        mounted(){}
    })
</script>
**************************************
框架帮助开发者定义的标签，可以称为内置标签。
对元素标签的扩展--》组件。（内置组件，自定义的组件）。  组件化。-》模板
元素标签属性的扩展--》指令。
***************自定义组件*******************************
1、定义组件需要使用components选项。components是一个对象，
    该对象下的属性即是组件名字，属性的值是一个对象，
    该对象的属性是组件的相关配置信息。
    组件当中至少应该拥有template属性或render方法。
2、使用时，可以将组件的名字作为标签来使用。假设名字为suibian--> <suibian></suibian>
3、当你的组件名称当中使用驼峰命名时，在使用组件时，名字小写与大写之间应该用-来分割。大写改小写。详见示例8
4、组件当中的数据，与其外部的实例是不共享的。示例9
5、在组件内定义的数据（data), 1、必须要是一个函数。2、函数必须要有返回值 3、返回值必须要是一个对象  示例10
******************使用组件*************************************
动态组件：components是一个内置组件，可以通过is指定组件名来决定采用哪一个组件。
<components is="two"></components>
******************组件之间的传值*************************************
规则：写组件的时候，首字母全部大写。
组件之间数据的传值均是单向数据流。
1、父子(向下)传值：通过属性
    // 1、传递的属性不能出现大写。需要用-分割。大写转为小写
    // 2、从父级接收过来的数据是不允许直接修改。
    // 3、接收过来的属性名，不允许与当前组件的数据名（data属性名）相同
2、子父（向上）传值：通过自定义事件
    <wrap v-show="isShow" @abcdefg="changeIsShow"></wrap>
    @click="$emit('abcdefg',false)"
3、非父子传值：通过bus.
    *发布与订阅需要在同一个实例下才能够起效果。
    $on:接收消息
    $off:取消订阅。
    $once:接收一次
    $emit:发布消息





